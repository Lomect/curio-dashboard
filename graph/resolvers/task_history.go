package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.55

import (
	"context"
	"time"

	"github.com/strahe/curio-dashboard/graph"
	"github.com/strahe/curio-dashboard/graph/cachecontrol"
	"github.com/strahe/curio-dashboard/graph/model"
)

// CompletedBy is the resolver for the completedBy field.
func (r *taskHistoryResolver) CompletedBy(ctx context.Context, obj *model.TaskHistory) (*model.Machine, error) {
	res, err := r.loader.MachineByHostPort(ctx, obj.CompletedByHostAndPort)
	if err != nil {
		return nil, err
	}
	cachecontrol.SetHint(ctx, cachecontrol.ScopePrivate, time.Minute)
	return res, nil
}

// TaskHistory returns graph.TaskHistoryResolver implementation.
func (r *Resolver) TaskHistory() graph.TaskHistoryResolver { return &taskHistoryResolver{r} }

type taskHistoryResolver struct{ *Resolver }
