package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"github.com/strahe/curio-dashboard/graph"
	"github.com/strahe/curio-dashboard/graph/model"
)

// Alerts is the resolver for the alerts field.
func (r *subscriptionResolver) Alerts(ctx context.Context, offset int) (<-chan *model.Alert, error) {
	return r.loader.SubAlerts(ctx, offset)
}

// CompletedTask is the resolver for the completedTask field.
func (r *subscriptionResolver) CompletedTask(ctx context.Context, last int) (<-chan *model.TaskHistory, error) {
	return r.loader.SubCompletedTask(ctx, last)
}

// NewTask is the resolver for the newTask field.
func (r *subscriptionResolver) NewTask(ctx context.Context, last int) (<-chan *model.Task, error) {
	return r.loader.SubNewTask(ctx, last)
}

// Subscription returns graph.SubscriptionResolver implementation.
func (r *Resolver) Subscription() graph.SubscriptionResolver { return &subscriptionResolver{r} }

type subscriptionResolver struct{ *Resolver }
