type MarketMk12Deal {
  uuid: String!
  spId: ActorID!
  createdAt: Time!
  signedProposalCid: String!
  proposalSignature: Bytes!
  proposal: JSONB!
  offline: Boolean!
  verified: Boolean!
  startEpoch: Uint64!
  endEpoch: Uint64!
  clientPeerId: String!
  chainDealId: Uint64
  publishCid: String
  pieceCid: String!
  pieceSize: Uint64!
  fastRetrieval: Boolean!
  announceToIpni: Boolean!
  url: String
  urlHeaders: JSONB!
  error: String
  label: Bytes
  proposalCid: String!
}

input MarketMk12DealFilterInput {
  spId: ActorID
  uuid: String
  signedProposalCid: String
  proposalCid: String
  pieceCid: String
}

extend type Query {
  marketMk12Deals(filter: MarketMk12DealFilterInput!, limit: Int!, offset: Int!): [MarketMk12Deal!]!
  marketMk12DealsCount(filter: MarketMk12DealFilterInput!): Int!
}
