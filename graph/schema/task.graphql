type Task {
    id: Int!
    initiatedByID: Int
    initiatedBy: Machine
    updateTime: Time!
    postedTime: Time!
    ownerId: Int
    owner: Machine
    addedByID: Int!
    addedBy: Machine!
    previousTaskID: Int
    previousTask: TaskHistory
    name: String!
    histories: [TaskHistory]
}

type TaskSuccessRate {
    total: Int!
    success: Int!
    failure: Int!
    successRate: Float!
}

type RunningTaskSummary {
    running: Int!
    queued: Int!
    averageWaitTime: Float!
}

extend type Query {
    taskSuccessRate(name: String, start: Time!, end: Time!): TaskSuccessRate
    runningTaskSummary: RunningTaskSummary
}
